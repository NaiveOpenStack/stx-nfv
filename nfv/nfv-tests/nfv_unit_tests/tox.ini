#
# Copyright (c) 2015-2016 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#

# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
[nfv]
nfv_client_dir = ../../nfv-client
nfv_common_dir = ../../nfv-common
nfv_plugins_dir = ../../nfv-plugins
nfv_vim_dir = ../../nfv-vim

nfv_client_src_dir = {[nfv]nfv_client_dir}/nfv_client
nfv_common_src_dir = {[nfv]nfv_common_dir}/nfv_common
nfv_plugins_src_dir = {[nfv]nfv_plugins_dir}/nfv_plugins
nfv_vim_src_dir = {[nfv]nfv_vim_dir}/nfv_vim

deps = {[nfv]nfv_client_dir}
       {[nfv]nfv_common_dir}
       {[nfv]nfv_plugins_dir}
       {[nfv]nfv_vim_dir}
       -e{[tox]cgcsdir}/mwa-cleo/fm-api
       iso8601
       keyring
       kombu
       passlib
       pecan
       pyparsing
       PyYAML
       sqlalchemy
       stevedore
       wsme


[nosetests]
verbosity=2

[tox]
toxworkdir = /tmp/{env:USER}_nfvtox
envlist = pep8,lint,py27-sqlite
cgcsdir = {toxinidir}/../../../..

[testenv]
recreate = True

[testenv:pep8]
deps = flake8
commands = flake8 --max-line-length 84  {[nfv]nfv_client_dir}
           flake8 --max-line-length 84  {[nfv]nfv_common_dir}
           flake8 --max-line-length 84  {[nfv]nfv_plugins_dir}
           flake8 --max-line-length 84  {[nfv]nfv_vim_dir}

[testenv:lint]
deps = {[nfv]deps}
       pylint
basepython = python2.7
commands = pylint {[nfv]nfv_client_src_dir}  \
                  {[nfv]nfv_common_src_dir}  \
                  {[nfv]nfv_plugins_src_dir} \
                  {[nfv]nfv_vim_src_dir}     \
                  --rcfile=./pylint.rc

[testenv:py27-sqlite]
basepython = py27-sqlite: python2.7
deps = {[nfv]deps}
       mock
       nose
       coverage
setenv = PYTHONDONTWRITEBYTECODE=True
#commands = nosetests --pdb --exe -w tests/
commands = cp -v ./test_data/nfv_vim_db_17.06_GA {envdir}/
           {envbindir}/nosetests --exe -w tests/ '{posargs}'
# Use the following for code coverage
#           {envbindir}/nosetests --exe --cover-erase --cover-branches \
#           --cover-package=nfv_common,nfv_vim --with-coverage -w tests/
whitelist_externals = cp
