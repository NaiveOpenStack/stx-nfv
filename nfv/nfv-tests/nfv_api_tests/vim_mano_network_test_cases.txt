#
# Create the following physical networks before running the test below:
#   - physnet-x type vlan and set the segmentation range 
#   - physnet-y type vxlan and set the segmentation range
#   - physnet-z type flat

# neutron providernet-create physnet-x --type vlan
# neutron providernet-range-create physnet-x --name physnet-x-a --range 300-399
#
# neutron providernet-create physnet-y --type vxlan
# neutron providernet-range-create physnet-y --name physnet-y-a --range 300-399 --group 239.4.4.4 --ttl 1
#
# neutron providernet-create physnet-z --type flat
#
#
# Notes: 
#  - deleting networks and subnets from the GUI or CLI take time for the VIM 
#    to catch up (approx. 30 seconds).  VIM polls for changes periodically for
#    subnets and networks.
#
#  - the following variance should be taken into consideration on allocation: 
#       type_of_network = {flat, vlan, vxlan}
#       type_of_segment = setting depends on type_of_network
#       is_shared = {true, false}
#       is_dhcp_enabled = {true, false}
#       layer3_attributes = ipv4 and ipv6 addressing
#
#  - the following variance should be taken into consideration on updates:
#       is_shared = {true, false}
#       is_dhcp_enabled = {true, false}       
#       layer3_attributes = addition, deletion and updating of ipv4 and ipv6 subnets
#
#  - no support for tenants other than administrative currently
#
TENANT_ID=`openstack token issue | grep "| project_id |" | cut -f3 -d'|' | tr -d '[[:space:]]'`
TOKEN_ID=`openstack token issue | grep "| id         |" | cut -f3 -d'|' | tr -d '[[:space:]]'`

1. Allocate Network with No Subnets
-----------------------------------
:: Vlan Network on Physnet-X ::
cat > network_no_subnets_request.txt
{"network_resource_id": "network-no-subnets", "network_resource_type": "network",
 "type_network_data": {"type_of_network": "vlan", "type_of_segment": "350",
 "wrs_physical_network": "physnet-x", "is_shared": true }}

curl -i -X POST -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks -d @network_no_subnets_request.txt

:: Vxlan Network on Physnet-Y ::
cat > network_no_subnets_request.txt
{"network_resource_id": "network-no-subnets", "network_resource_type": "network",
 "type_network_data": {"type_of_network": "vxlan", "type_of_segment": "351",
 "wrs_physical_network": "physnet-y", "is_shared": true }}

curl -i -X POST -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks -d @network_no_subnets_request.txt

:: Flat Network on Physnet-Z ::
cat > network_no_subnets_request.txt
{"network_resource_id": "network-no-subnets", "network_resource_type": "network",
 "type_network_data": {"type_of_network": "flat",
 "wrs_physical_network": "physnet-z", "is_shared": true }}

curl -i -X POST -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks -d @network_no_subnets_request.txt


2. Allocate Network with IPv4 Subnets
-------------------------------------
cat > network_ipv4_subnets_request.txt
{"network_resource_id": "network-ipv4-subnets", "network_resource_type": "network",
 "type_network_data": {"type_of_network": "vlan", "type_of_segment": "351", 
 "wrs_physical_network": "physnet-x", "is_shared": true,
 "layer3_attributes":
   [{"ip_version": "4", "is_dhcp_enabled": true, "gateway_ip": "192.168.12.1",
     "wrs_subnet_ip": "192.168.12.0", "wrs_subnet_prefix": 24}]}}

curl -i -X POST -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks -d @network_ipv4_subnets_request.txt


3. Allocate Network with IPv6 Subnets
-------------------------------------
cat > network_ipv6_subnets_request.txt
{"network_resource_id": "network-ipv6-subnets", "network_resource_type": "network",
 "type_network_data": {"type_of_network": "vlan", "type_of_segment": "352", 
 "wrs_physical_network": "physnet-x", "is_shared": true,
 "layer3_attributes":
   [{"ip_version": "6", "is_dhcp_enabled": true, "gateway_ip": "3FFE::1",
     "wrs_subnet_ip": "3FFE::", "wrs_subnet_prefix": 16}]}}

curl -i -X POST -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks -d @network_ipv6_subnets_request.txt


4. Allocate Network with IPv4 and IPv6 Subnets
----------------------------------------------
cat > network_ipv4_ipv6_subnets_request.txt
{"network_resource_id": "network-ipv4-ipv6-subnets", "network_resource_type": "network",
 "type_network_data": {"type_of_network": "vlan", "type_of_segment": "353", 
 "wrs_physical_network": "physnet-x", "is_shared": true,
 "layer3_attributes":
   [{"ip_version": "4", "is_dhcp_enabled": true, "gateway_ip": "192.168.13.1",
     "wrs_subnet_ip": "192.168.13.0", "wrs_subnet_prefix": "24"},
    {"ip_version": "4", "is_dhcp_enabled": true, "gateway_ip": "192.168.14.1",
     "wrs_subnet_ip": "192.168.14.0", "wrs_subnet_prefix": "24"},
    {"ip_version": "6", "is_dhcp_enabled": true, "gateway_ip": "3FFE::1",
     "wrs_subnet_ip": "3FFE::", "wrs_subnet_prefix": "16"}]}}

curl -i -X POST -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks -d @network_ipv4_ipv6_subnets_request.txt


5. Attempt to Allocate Network that already exists
--------------------------------------------------
cat > network_no_subnets_request.txt
{"network_resource_id": "network-no-subnets", "network_resource_type": "network",
 "type_network_data": {"type_of_network": "vlan", "type_of_segment": "354",
 "wrs_physical_network": "physnet-x", "is_shared": true }}

curl -i -X POST -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks  -d @network_no_subnets_request.txt

curl -i -X POST -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks -d @network_no_subnets_request.txt


6. Attempt to Allocate Network with Bad IPv4 Subnets
----------------------------------------------------
cat > network_bad_ipv4_subnets_request.txt
{"network_resource_id": "network-bad-ipv4-subnets", "network_resource_type": "network",
 "type_network_data": {"type_of_network": "vlan", "type_of_segment": "355", 
 "wrs_physical_network": "physnet-x", "is_shared": true,
 "layer3_attributes":
   [{"ip_version": "4", "is_dhcp_enabled": true, "gateway_ip": "292.168.12.1",
     "wrs_subnet_ip": "292.168.12.0", "wrs_subnet_prefix": 24}]}}

curl -i -X POST -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks -d @network_bad_ipv4_subnets_request.txt


7. Update Network Shared Attribute
----------------------------------
cat > network_update_no_subnets_request.txt
{"network_resource_id": "network-no-subnets", "update_network_data": {"is_shared": true }}

curl -i -X PATCH -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks -d @network_update_no_subnets_request.txt


8. Update Network Subnets
-------------------------
cat > network_update_ipv4_ipv6_subnets_request.txt
{"network_resource_id": "network-ipv4-ipv6-subnets",  "update_network_data":  
 {"layer3_attributes":
   [{"ip_version": "4", "is_dhcp_enabled": true,
     "wrs_subnet_ip": "192.168.14.0", "wrs_subnet_prefix": "24"},
    {"ip_version": "6", "is_dhcp_enabled": false, "gateway_ip": "3FFE::1",
     "wrs_subnet_ip": "3FFE::", "wrs_subnet_prefix": "16"},
    {"ip_version": "4", "is_dhcp_enabled": false, "gateway_ip": "192.168.15.1",
     "wrs_subnet_ip": "192.168.15.0", "wrs_subnet_prefix": "24"}
   ]}}

curl -i -X PATCH -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks -d @network_update_ipv4_ipv6_subnets_request.txt


9. Attempt to Update Network that does not exist
------------------------------------------------
cat > network_non_existent_update_request.txt
{"network_resource_id": "network-does-not-exist", "update_network_data": {"is_shared": true }}

curl -i -X PATCH -H 'Content-Type: application/json' -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks -d @network_non_existent_update_request.txt


10. Delete a Network
--------------------
cat > network_delete_request.txt
{"network_resource_ids": ["network-no-subnets"]}

curl -i -X DELETE -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks  -d @network_delete_request.txt


11. Delete Networks
-------------------
cat > network_delete_all_request.txt
{"network_resource_ids": ["network-no-subnets", "network-ipv4-subnets", "network-ipv6-subnets",
                          "network-ipv4-ipv6-subnets"]}

curl -i -X DELETE -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks  -d @network_delete_all_request.txt


12. Attempt to Delete a Network that does not exist
---------------------------------------------------
cat > network_non_existent_delete_request.txt
{"network_resource_ids": ["network-does-not-exist"]}


curl -i -X DELETE -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks  -d @network_non_existent_delete_request.txt


13. Get a Network
-----------------
curl -i -X GET -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks/network-no-subnets

curl -i -X GET -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks/network-ipv4-subnets

curl -i -X GET -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks/network-ipv6-subnets

curl -i -X GET -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks/network-ipv4-ipv6-subnets


14. Attempt to Get a Network that does not exist
------------------------------------------------
curl -i -X GET -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks/network-does-not-exist


15. Get Networks
----------------
curl -i -X GET -H 'Content-Type: application/json' -H "X-Auth-Token: ${TOKEN_ID}" -H 'Accept: application/json' \
http://localhost:4545/api/virtualised-resources/networks


